{"version":3,"sources":["logo.svg","actions/index.js","components/Movie.js","components/Delete.js","components/NewEdit.js","components/Loading.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","SET_MOVIES","SET_TOGGLE","setMovies","movies","type","setToggle","active","arguments","length","undefined","action","Movie","_this$props","this","props","res","index","title","Title","replace","toLowerCase","split","map","s","charAt","toUpperCase","substring","join","react_default","a","createElement","reactstrap_es","className","index_es","icon","Year","Runtime","Genre","Director","color","onClick","Component","connect","Delete","delete","_this","list","splice","_this$props2","isOpen","toggle","bind","NewEdit","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","input","e","setState","defineProperty","target","name","value","submit","_this$state","state","obj","error","errorMessage","current_year","Date","getFullYear","key","push","test","parseInt","imdbID","Math","random","toString","slice","close","console","log","selected","assertThisInitialized","_this$state2","msg","txt","addonType","onChange","Loading","library","add","faFilm","faPlus","faEdit","faTrash","faTimes","faCheck","App","loading","_this2","moviesListArr","axios","get","then","resp","moviesList","data","Search","_ref","asyncToGenerator","regenerator_default","mark","_callee","movie","wrap","_context","prev","next","concat","details","stop","_x","apply","Promise","all","_this3","_this$props$toggle","result","components_Movie","Loading_Loading","src","logo","alt","components_Delete","components_NewEdit","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5295d299.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const SET_MOVIES = 'SET_MOVIES';\nexport const SET_TOGGLE = 'SET_TOGGLE';\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\n\nexport function setMovies(movies){\n  return {\n    type: SET_MOVIES,\n    movies\n  }\n}\n\nexport function setToggle(active = null, action = null){\n  return {\n    type: SET_TOGGLE,\n    active,\n    action\n  }\n}","import React, { Component } from 'react';\nimport { Col, Card, CardHeader, CardText, CardBody, CardTitle, CardSubtitle, Button, CardFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { setToggle } from '../actions'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Movie extends Component {\n  render() {\n    const { res, index, setToggle } = this.props;\n    const title = res.Title.replace(/[^A-Za-z0-9 ]/g,\"\").toLowerCase().split(' ').map((s) => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n\n    return (\n      <Col className=\"col-12 col-md-6 col-lg-4\">\n        <Card className=\"m-3\">\n          <CardHeader><FontAwesomeIcon icon=\"film\" />  Id: {index}</CardHeader>\n          <CardBody>\n            <CardTitle>Title: {title}</CardTitle>\n            <CardSubtitle>Year: {res.Year}</CardSubtitle>\n            <CardText>\n              Runtime: {res.Runtime}<br />\n              Genre: {res.Genre}<br />\n              Director: {res.Director}\n            </CardText>\n          </CardBody>\n          <CardFooter className=\"bg-transparent text-center\">\n            <Button color=\"success\" onClick={()=>setToggle(index,\"edit\")}><FontAwesomeIcon icon=\"edit\" /> Edit</Button>\n            <Button color=\"danger\" onClick={()=>setToggle(index,\"delete\")}><FontAwesomeIcon icon=\"trash\" /> Delete</Button>\n          </CardFooter>\n        </Card>\n      </Col>\n    );\n  }\n}\n\n\nexport default connect(null, {setToggle})(Movie);\n\n","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { setMovies, setToggle } from '../actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Delete extends Component {\n  delete = () => {\n    let { active, list } = this.props;\n    list.splice(active, 1);\n    this.props.setMovies(list);\n    this.props.setToggle();\n  }\n\n  render() {\n    let { active, action, setToggle } = this.props;\n    \n    return (\n      <Modal isOpen={(active !== null && action === \"delete\")} toggle={setToggle}>\n        <ModalHeader toggle={setToggle}>Delete Movie</ModalHeader>\n        <ModalBody>\n          Are you sure that you want to delete this movie ?\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={ this.delete.bind(this) }><FontAwesomeIcon icon=\"check\" /> Ok</Button>{' '}\n          <Button color=\"danger\" onClick={ setToggle }><FontAwesomeIcon icon=\"times\" /> Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\n\nexport default connect(null, { setMovies, setToggle })(Delete);","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, InputGroup, InputGroupAddon, Input, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { setToggle, setMovies } from '../actions';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass NewEdit extends Component {\n  constructor(props){\n    super(props);\n\n    console.log(props);\n    this.state = {\n      Title: (typeof props.selected !== \"undefined\") ? props.selected.Title : \"\",\n      Year: (typeof props.selected !== \"undefined\") ? props.selected.Year : \"\",\n      Runtime: (typeof props.selected !== \"undefined\") ? props.selected.Runtime : \"\",\n      Genre: (typeof props.selected !== \"undefined\") ? props.selected.Genre : \"\",\n      Director: (typeof props.selected !== \"undefined\") ? props.selected.Director : \"\",\n      error: false,\n      errorMessage: \"\"\n    }\n\n    this.submit = this.submit.bind(this);\n    this.input = this.input.bind(this);\n  }\n\n  input = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  submit = () => {\n    let { list, action, active } = this.props;\n    let { Title, Year, Runtime, Genre, Director } = this.state;\n    let obj = this.state;\n\n    let error = false;\n    let errorMessage = [];\n    let current_year = new Date().getFullYear();\n    let reg = /^[0-9]+$/;\n\n    for (var key in obj) {\n      if (obj[key] === \"\" && key !== \"errorMessage\"){\n        error = true;\n      }\n    }\n\n    if(error) errorMessage.push(\"All fields are mandatory.\");\n\n    if((!reg.test(Year)) || parseInt(Year) > current_year || Year.length !== 4) {\n      error = true;\n      errorMessage.push(\"Invalid year.\");\n    } \n\n    if(action === \"new\"){\n      list.map(res => {   \n        if(res.Title.toLowerCase() === Title.toLowerCase()) {\n          error = true;\n          errorMessage.push(\"The same movie name is already exist.\");\n        }\n        return true;\n      })\n    }\n\n    if(!error){\n      let obj = { \n        imdbID: Math.random().toString(32).slice(2),\n        Title: Title,\n        Year: Year,\n        Runtime: Runtime,\n        Genre: Genre,\n        Director: Director,\n      };\n\n      (action === \"new\") ? list.push(obj) : list[active] = obj;\n      \n      this.props.setMovies(list);\n\n      this.close();\n    }\n    else {\n      this.setState({ error: error, errorMessage: errorMessage });\n    }\n \n  }\n\n  close = () => {\n    this.setState({\n      Title: \"\",\n      Year: \"\",\n      Runtime: \"\",\n      Genre: \"\",\n      Director: \"\",\n      error: false,\n      errorMessage: \"\"\n    });\n\n    this.props.setToggle();\n  }\n\n  render() {\n    let { action } = this.props;\n    let title = (action === \"new\") ? \"Add New Movie\" : \"Edit Movie\";\n    let { error, errorMessage } = this.state;\n    let msg = null;\n    \n    if(errorMessage.length > 0) msg = errorMessage.map((txt, index) => <p key={index}>{txt}</p> );\n\n    return (\n      <Modal isOpen={(action === \"new\" || action === \"edit\")} toggle={this.close}>\n        <ModalHeader toggle={this.close}>{title}</ModalHeader>\n        <ModalBody>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Title</InputGroupAddon>\n            <Input name=\"Title\" onChange={this.input} value={this.state.Title} />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Year</InputGroupAddon>\n            <Input name=\"Year\" onChange={this.input} value={this.state.Year} />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Runtime</InputGroupAddon>\n            <Input name=\"Runtime\" onChange={this.input} value={this.state.Runtime} />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Genre</InputGroupAddon>\n            <Input name=\"Genre\" onChange={this.input} value={this.state.Genre} />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Director</InputGroupAddon>\n            <Input name=\"Director\" onChange={this.input} value={this.state.Director} />\n          </InputGroup>\n          {\n            (error) && <Alert color=\"danger text-center error\">{ msg }</Alert>\n          }\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"success\" onClick={ this.submit }><FontAwesomeIcon icon=\"check\" /> Save</Button>{' '}\n          <Button color=\"danger\" onClick={ this.close }><FontAwesomeIcon icon=\"times\" /> Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(null, { setToggle, setMovies })(NewEdit);","import React, { Component } from 'react';\nimport { Col } from 'reactstrap';\n\nexport default class Loading extends Component {\n  render() {\n    return (\n        <Col className=\"text-center\">\n            <div className=\"sk-circle\">\n              <div className=\"sk-circle1 sk-child\"></div>\n              <div className=\"sk-circle2 sk-child\"></div>\n              <div className=\"sk-circle3 sk-child\"></div>\n              <div className=\"sk-circle4 sk-child\"></div>\n              <div className=\"sk-circle5 sk-child\"></div>\n              <div className=\"sk-circle6 sk-child\"></div>\n              <div className=\"sk-circle7 sk-child\"></div>\n              <div className=\"sk-circle8 sk-child\"></div>\n              <div className=\"sk-circle9 sk-child\"></div>\n              <div className=\"sk-circle10 sk-child\"></div>\n              <div className=\"sk-circle11 sk-child\"></div>\n              <div className=\"sk-circle12 sk-child\"></div>\n              <span className=\"loading\">Loading...</span>\n            </div>\n        </Col>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { setMovies, setToggle } from '../actions';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport Delete from './Delete';\nimport NewEdit from './NewEdit';\nimport Loading from './Loading';\nimport logo from '../../src/logo.svg';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilm, faPlus, faEdit, faTrash, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faFilm, faPlus, faEdit, faTrash, faTimes, faCheck);\n\nclass App extends Component {\n  state = {\n    loading: true\n  }\n\n  componentDidMount() {\n    let moviesListArr = [];\n    axios.get('http://www.omdbapi.com/?s=Batman&apiKey=e8dc217a').then(resp => { \n        let moviesList = resp.data.Search.map(async (movie) => {\n        await axios.get(`http://www.omdbapi.com/?apiKey=e8dc217a&i=${movie.imdbID}`).then(details => { \n        //    console.log(details.data);\n          moviesListArr.push(details.data);\n          return details.data;\n        });\n      })\n  \n      Promise.all(moviesList).then(() => {\n     //   console.log(moviesListArr);\n        this.props.setMovies(moviesListArr);\n        this.setState({ loading: false });\n      });\n  \n    });\n  }\n\n  render() {\n    let { list } = this.props;\n    let { active, action } = this.props.toggle;\n    let { loading } = this.state;\n    let result = null;\n\n    if(list.length > 0 && !loading){\n      result = list.map((res, index) => <Movie key={res.imdbID} res={ res } index={ index } />);\n    }\n    else if(loading){\n      result = <Loading />\n    }\n    else {\n      result = <Col><Alert color=\"info text-center mt-3 mb-3\">No Result</Alert></Col>\n    }\n\n    return (\n      <div className=\"mt-3 mb-3\">\n        <header>\n          <h1 className=\"text-center\"><img className=\"logo\" src={logo} alt=\"React\" /> Herolo Cinema</h1>\n        </header>\n\n        <Container className=\"mt-3 mb-3\">\n          <Row>\n            <Col className=\"text-center\">\n              {\n                (!loading) && \n                  <Button color=\"primary\" onClick={()=> this.props.setToggle(null, \"new\")}><FontAwesomeIcon icon=\"plus\" /> Add new movie</Button>\n              }\n              \n            </Col>\n          </Row>\n          <Row>\n            {result}\n          </Row>\n        </Container>\n\n        {\n          (action === \"delete\" || action === \"edit\" || action === \"new\") && \n          <div>\n            <Delete active={ active } action={ action } list={ list } />\n\n            <NewEdit active={ active } action={ action } list={ list } selected={list[active]} /> \n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return state;\n}\n\nexport default connect(mapStateToProps, { setMovies, setToggle })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { SET_MOVIES, SET_TOGGLE } from '../actions';\n\n\nfunction list(state = [], action){\n  switch(action.type){\n    case SET_MOVIES:\n      return action.movies;\n    default:\n      return state;\n  }\n}\n\n\nfunction toggle(state = [], action){\n  switch(action.type){\n    case SET_TOGGLE:\n      return { active: action.active, action: action.action };\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({ list, toggle });\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n//store.subscribe(() => console.log('store', store.getState()));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}